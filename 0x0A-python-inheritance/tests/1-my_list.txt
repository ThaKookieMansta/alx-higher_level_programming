====================================
1. my_list module
====================================

import module
=============
>>> my_list = __import__('1-my_list').MyList

Checking Module Docstring
=========================

>>> m = __import__('1-my_list').__doc__
>>> len(m) > 1
True

Checking class Docstring
===========================

>>> c = __import__('1-my_list').MyList.__doc__
>>> len(c) > 1
True

Checking method Docstring
===========================

>>> met = __import__('1-my_list').MyList.print_sorted.__doc__
>>> len(met) > 1
True

Checking inheritance
====================

>>> issubclass(my_list, list)
True

Checking for empty list
=======================

>>> ml = my_list()
>>> ml.print_sorted()
[]

Testing List appending
======================
>>> ml.append(7)
>>> ml.append(3)
>>> ml.append(4)
>>> ml.append(1)
>>> print(ml)
[7, 3, 4, 1]

Testing List Order
==================
>>> ml.print_sorted()
[1, 3, 4, 7]

Checking for reversed order list:
>>> ml = my_list()
>>> ml.append(4)
>>> ml.append(3)
>>> ml.append(2)
>>> ml.append(1)
>>> print(ml)
[4, 3, 2, 1]
>>> ml.print_sorted()
[1, 2, 3, 4]
>>> print(ml)
[4, 3, 2, 1]

Testing for negative numbers
============================
>>> ml.append(-1)
>>> ml.append(5)
>>> print(ml)
[4, 3, 2, 1, -1, 5]
>>> ml.print_sorted()
[-1, 1, 2, 3, 4, 5]
>>> print(ml)
[4, 3, 2, 1, -1, 5]

>>> ml = my_list()
>>> ml.append(-10)
>>> ml.append(-1)
>>> ml.append(-7)
>>> ml.append(-2)
>>> ml.append(-8)
>>> print(ml)
[-10, -1, -7, -2, -8]
>>> ml.print_sorted()
[-10, -8, -7, -2, -1]
>>> print(ml)
[-10, -1, -7, -2, -8]

Testing number of arguments
===========================
>>> ml.print_sorted(1)
Traceback (most recent call last):
TypeError: print_sorted() takes 1 positional argument but 2 were given